{{file "haproxy.cfg"}}

{{range services}}{{range $tag, $services := service .Name|byTag}}{{if or (eq $tag "webapp") (eq $tag "haproxy")}}{{$service_name := (index $services 0).Name}}    # HTTP service: {{$service_name}}
    {{range datacenters}}acl acl_{{$service_name}} hdr(host) -i {{$service_name}}.service.{{.}}.consul{{end}}
    acl acl_{{$service_name}} hdr(host) -i {{$service_name}}.service.consul
    {{if ne (env "HAPROXY_ADD_DOMAIN")  ""}}acl acl_{{$service_name}} hdr(host) -i {{$service_name}}{{env "HAPROXY_ADD_DOMAIN" }}{{end}}
    use_backend backend_{{$service_name}} if acl_{{$service_name}}

{{end}}{{end}}{{end}}

    acl acl_panteras hdr(host) -i localhost
    acl acl_panteras hdr(host)    127.0.0.1
    {{if ne (env "HOSTNAME") ""}}acl acl_panteras hdr(host) -i {{env "HOSTNAME"}}{{end}}
    {{if ne (env "FQDN")     ""}}acl acl_panteras hdr(host) -i {{env "FQDN"}}{{end}}
    {{if ne (env "HOST_IP")  ""}}acl acl_panteras hdr(host)    {{env "HOST_IP" }}{{end}}
    use_backend backend_panteras if acl_panteras

    backend backend_panteras
        errorfile 503 /etc/haproxy/errors/panteras.http


{{range services}}{{range $tag, $services := service .Name|byTag}}{{if or (eq $tag "webapp") (eq $tag "haproxy")}}{{$service_name := (index $services 0).Name}}# HTTP service: {{$service_name}}
backend backend_{{$service_name}}{{$key_maxconn := printf "/haproxy/%s/maxconn" $service_name}}
    balance roundrobin
    option  http-server-close
{{range $services}}    server  {{.Node}}_{{.Port}} {{.Address}}:{{.Port}} maxconn {{if key $key_maxconn}}{{key $key_maxconn}}{{else}}128{{end}} {{range .Tags}}{{if .| regexMatch "weight=([0-9]+)" }} {{.| regexReplaceAll "=" " "}} {{end}}{{end}}
{{end}}
{{end}}{{end}}{{end}}

{{range services}}{{range $tag, $services := service .Name|byTag}}{{$service := (index $services 0)}}{{range $service.Tags}}{{if .| regexMatch "haproxy_tcp=([0-9]+)" }}{{$tcp_port := .| regexReplaceAll "haproxy_tcp=" ""}}
# TCP forwarding service: {{$service.Name}}:{{$tcp_port}}
listen tcp_{{$service.Name}} :{{$tcp_port}}
    mode    tcp
    option  tcplog
    balance roundrobin
{{range $services}}    server  {{.Node}}_{{.Port}} {{.Address}}:{{.Port}} check{{end}}
{{end}}
{{end}}{{end}}{{end}}
